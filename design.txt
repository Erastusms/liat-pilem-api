contoh isi .env
DB_HOST=localhost
DB_USER=root
DB_PASS=password_anda
DB_NAME=movie_db
DB_DIALECT=mysql
JWT_SECRET=supersecretkey
PORT=5000

rancangan struktur folder api:
ðŸ“‚ project-root
â”‚â”€â”€ ðŸ“‚ src
â”‚   â”‚â”€â”€ ðŸ“‚ config           # Konfigurasi database, env, dll.
â”‚   â”‚   â”‚â”€â”€ db.js          # Koneksi database (PostgreSQL / MySQL)
â”‚   â”‚â”€â”€ ðŸ“‚ models          # Struktur tabel/database
â”‚   â”‚   â”‚â”€â”€ userModel.js   # Model user
â”‚   â”‚   â”‚â”€â”€ movieModel.js  # Model film
â”‚   â”‚â”€â”€ ðŸ“‚ routes          # Definisi endpoint API
â”‚   â”‚   â”‚â”€â”€ userRoutes.js  # Routes untuk user
â”‚   â”‚   â”‚â”€â”€ movieRoutes.js # Routes untuk film
â”‚   â”‚â”€â”€ ðŸ“‚ controllers     # Logika utama dari request
â”‚   â”‚   â”‚â”€â”€ userController.js  # Controller user
â”‚   â”‚   â”‚â”€â”€ movieController.js # Controller film
â”‚   â”‚â”€â”€ ðŸ“‚ services        # Business logic (opsional)
â”‚   â”‚   â”‚â”€â”€ userService.js  # Service untuk user
â”‚   â”‚   â”‚â”€â”€ movieService.js # Service untuk film
â”‚   â”‚â”€â”€ ðŸ“‚ middlewares      # Middleware (auth, error handling, validasi, dll.)
â”‚   â”‚   â”‚â”€â”€ authMiddleware.js # Middleware auth (JWT)
â”‚   â”‚   â”‚â”€â”€ validateMiddleware.js # Middleware validasi Joi
â”‚   â”‚â”€â”€ ðŸ“‚ validations      # Validasi Joi
â”‚   â”‚   â”‚â”€â”€ userValidation.js  # Validasi input user
â”‚   â”‚   â”‚â”€â”€ movieValidation.js # Validasi input film
â”‚   â”‚â”€â”€ server.js          # File utama untuk menjalankan server
â”‚â”€â”€ .env                  # File konfigurasi environment
â”‚â”€â”€ package.json          # Dependensi proyek
â”‚â”€â”€ README.md             # Dokumentasi proyek
